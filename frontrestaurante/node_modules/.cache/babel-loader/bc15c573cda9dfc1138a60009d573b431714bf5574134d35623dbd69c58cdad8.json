{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marinara Souza Silva\\\\Desktop\\\\ProjetoRestaurante\\\\frontrestaurante\\\\src\\\\Pages\\\\Administrador\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Administrador() {\n  _s();\n  // Inicializa o estado com um array vazio\n  const [testeArray, setTesteArray] = useState([]);\n\n  // Função para adicionar um novo número ao array\n  const adicionarNumero = () => {\n    const novoNumero = testeArray.length > 0 ? testeArray[testeArray.length - 1] + 1 : 1;\n    setTesteArray([...testeArray, novoNumero]);\n  };\n\n  // Função para incrementar o valor de um índice específico\n  const incrementarIndice = indice => {\n    const novoArray = [...testeArray];\n    if (novoArray[indice] !== undefined) {\n      novoArray[indice] += 1;\n      setTesteArray(novoArray);\n    } else {\n      console.error('Índice fora do intervalo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"N\\xFAmeros: \", testeArray.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: adicionarNumero,\n      children: \"Adicionar N\\xFAmero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), testeArray.map((numero, indice) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => incrementarIndice(indice),\n      children: [\"Incrementar \\xCDndice \", indice]\n    }, indice, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Administrador, \"SvnaO2ZYSl/WgufzRPajsTl78a4=\");\n_c = Administrador;\nexport { Administrador };\nvar _c;\n$RefreshReg$(_c, \"Administrador\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Administrador","_s","testeArray","setTesteArray","adicionarNumero","novoNumero","length","incrementarIndice","indice","novoArray","undefined","console","error","children","join","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","numero","_c","$RefreshReg$"],"sources":["C:/Users/Marinara Souza Silva/Desktop/ProjetoRestaurante/frontrestaurante/src/Pages/Administrador/index.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nfunction Administrador() {\r\n    \r\n\r\n   // Inicializa o estado com um array vazio\r\n  const [testeArray, setTesteArray] = useState([]);\r\n\r\n  // Função para adicionar um novo número ao array\r\n  const adicionarNumero = () => {\r\n    const novoNumero = testeArray.length > 0 ? testeArray[testeArray.length - 1] + 1 : 1;\r\n    setTesteArray([...testeArray, novoNumero]);\r\n  };\r\n\r\n  // Função para incrementar o valor de um índice específico\r\n  const incrementarIndice = (indice) => {\r\n    const novoArray = [...testeArray];\r\n    if (novoArray[indice] !== undefined) {\r\n      novoArray[indice] += 1;\r\n      setTesteArray(novoArray);\r\n    } else {\r\n      console.error('Índice fora do intervalo');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Números: {testeArray.join(', ')}</p>\r\n      <button onClick={adicionarNumero}>Adicionar Número</button>\r\n      {testeArray.map((numero, indice) => (\r\n        <button key={indice} onClick={() => incrementarIndice(indice)}>\r\n          Incrementar Índice {indice}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {Administrador}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAGtB;EACD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAGH,UAAU,CAACI,MAAM,GAAG,CAAC,GAAGJ,UAAU,CAACA,UAAU,CAACI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IACpFH,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEG,UAAU,CAAC,CAAC;EAC5C,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAIC,MAAM,IAAK;IACpC,MAAMC,SAAS,GAAG,CAAC,GAAGP,UAAU,CAAC;IACjC,IAAIO,SAAS,CAACD,MAAM,CAAC,KAAKE,SAAS,EAAE;MACnCD,SAAS,CAACD,MAAM,CAAC,IAAI,CAAC;MACtBL,aAAa,CAACM,SAAS,CAAC;IAC1B,CAAC,MAAM;MACLE,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;IAC3C;EACF,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,GAAG,cAAS,EAACX,UAAU,CAACY,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCnB,OAAA;MAAQoB,OAAO,EAAEf,eAAgB;MAAAS,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1DhB,UAAU,CAACkB,GAAG,CAAC,CAACC,MAAM,EAAEb,MAAM,kBAC7BT,OAAA;MAAqBoB,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACC,MAAM,CAAE;MAAAK,QAAA,GAAC,wBAC1C,EAACL,MAAM;IAAA,GADfA,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CAlCQD,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAoCtB,SAAQA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}