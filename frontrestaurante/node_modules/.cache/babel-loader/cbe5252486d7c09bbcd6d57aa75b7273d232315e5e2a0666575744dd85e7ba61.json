{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marinara Souza Silva\\\\Desktop\\\\ProjetoRestaurante\\\\frontrestaurante\\\\src\\\\Pages\\\\Login\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { api } from \"../../Services/Api\";\nimport Input from \"../../Components/Input\";\nimport Button from \"../../Components/Button\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { TitleLogin, Container, Wrapper, CriarText } from \"./styles\";\nimport { useAuth } from \"../../Context/AuthProvider/useAuth\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  nome: yup.string().required('Campo obrigatório'),\n  telefone: yup.string().required('Campo obrigatório')\n}).required();\nfunction Login() {\n  _s();\n  var _errors$nome, _errors$telefone;\n  const [nomeForm, setNomeForm] = useState();\n  const [telefoneForm, setTelefoneForm] = useState();\n  const navigate = useNavigate();\n  const auth = useAuth();\n  const onFinish = async (nome, telefone) => {\n    nome = nomeForm;\n    telefone = telefoneForm;\n    try {\n      await auth.authenticate(nome, telefone);\n      navigate('/pedido');\n      console.log(nome);\n      console.log(telefone);\n      console.log(await auth.authenticate(nome, telefone));\n    } catch (error) {\n      alert('Falha no Login' + error);\n    }\n  };\n  const handleCriarConta = () => {\n    navigate('/criarconta');\n  };\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onChange\"\n  });\n  const [cliente, setCliente] = useState({\n    id: '',\n    nome: '',\n    telefone: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCliente({\n      ...cliente,\n      [name]: value\n    });\n  };\n  const handleChangeNome = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNomeForm({\n      [name]: value\n    });\n  };\n  const handleChangeTelefone = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTelefoneForm({\n      [name]: value\n    });\n  };\n  const clienteLoginPost = async e => {\n    e.preventDefault();\n    try {\n      delete cliente.id;\n      if (cliente.nome == null || cliente.telefone == null) {\n        alert(\"Insira o nome e o telefone\");\n      } else {\n        const response = await api.post(`Cliente/Login`, cliente);\n        if (response.data.perfil === \"Adm\") {\n          navigate('/administrador');\n        } else {\n          navigate('/pedido');\n        }\n      }\n    } catch (error) {\n      alert('Falha no Login' + error);\n    }\n  };\n  console.log(nome);\n  console.log(telefone);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(TitleLogin, {\n          children: \"Fa\\xE7a seu Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onFinish,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"nome\",\n            onChange: handleChangeNome,\n            errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$nome = errors.nome) === null || _errors$nome === void 0 ? void 0 : _errors$nome.message,\n            control: control,\n            placeholder: \"Nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"telefone\",\n            onChange: handleChangeTelefone,\n            errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$telefone = errors.telefone) === null || _errors$telefone === void 0 ? void 0 : _errors$telefone.message,\n            control: control,\n            placeholder: \"Telefone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Login\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CriarText, {\n            href: \"/criarconta\",\n            children: \" Criar conta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"f/gQWjMamOU8ujRO2vRraD5VycI=\", false, function () {\n  return [useNavigate, useAuth, useForm];\n});\n_c = Login;\nexport { Login };\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","useState","useNavigate","api","Input","Button","yupResolver","yup","TitleLogin","Container","Wrapper","CriarText","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","schema","object","nome","string","required","telefone","Login","_s","_errors$nome","_errors$telefone","nomeForm","setNomeForm","telefoneForm","setTelefoneForm","navigate","auth","onFinish","authenticate","console","log","error","alert","handleCriarConta","control","handleSubmit","formState","errors","resolver","mode","cliente","setCliente","id","handleChange","e","name","value","target","handleChangeNome","handleChangeTelefone","clienteLoginPost","preventDefault","response","post","data","perfil","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","errorMessage","message","placeholder","title","type","href","_c","$RefreshReg$"],"sources":["C:/Users/Marinara Souza Silva/Desktop/ProjetoRestaurante/frontrestaurante/src/Pages/Login/index.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate  } from \"react-router-dom\";\r\nimport { api } from \"../../Services/Api\";\r\nimport Input from \"../../Components/Input\";\r\nimport Button from \"../../Components/Button\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport {  TitleLogin, Container, Wrapper, CriarText } from \"./styles\"\r\nimport { useAuth } from \"../../Context/AuthProvider/useAuth\";\r\n\r\nconst schema = yup.object({\r\n  nome: yup.string().required('Campo obrigatório'),\r\n  telefone: yup.string().required('Campo obrigatório'),\r\n}).required();\r\n\r\nfunction Login() {\r\n  const [nomeForm, setNomeForm] = useState()\r\n  const [telefoneForm, setTelefoneForm] = useState()\r\n  const navigate = useNavigate();\r\n  const auth = useAuth()\r\n\r\n  const onFinish = async (nome, telefone) => {\r\n    nome = nomeForm\r\n    telefone = telefoneForm\r\n    try {\r\n      await auth.authenticate(nome, telefone)\r\n      navigate('/pedido')\r\n\r\n      console.log(nome)\r\n      console.log(telefone)\r\n      console.log(await auth.authenticate(nome, telefone))\r\n    } catch (error) {\r\n       alert('Falha no Login' + error)\r\n    }\r\n  }\r\n\r\n\r\n  const handleCriarConta = () => {\r\n    navigate('/criarconta')\r\n      \r\n  }\r\n  \r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n    mode: \"onChange\",\r\n  });\r\n \r\n  const [cliente, setCliente] = useState({\r\n    id: '',\r\n    nome: '',\r\n    telefone: ''\r\n  })\r\n    \r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setCliente({\r\n      ...cliente, [name]: value\r\n    });\r\n  }\r\n\r\n  const handleChangeNome = e => {\r\n    const { name, value } = e.target;\r\n    setNomeForm({[name]: value})\r\n  }\r\n\r\n  const handleChangeTelefone = e => {\r\n    const { name, value } = e.target;\r\n    setTelefoneForm({[name]: value})\r\n  }\r\n\r\n\r\n  const clienteLoginPost = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      delete cliente.id\r\n      if (cliente.nome == null || cliente.telefone == null) {\r\n        alert(\"Insira o nome e o telefone\")\r\n      } else {\r\n        const response = await api.post(`Cliente/Login`, cliente)\r\n        if (response.data.perfil === \"Adm\") {\r\n          navigate('/administrador')\r\n            \r\n        } else {\r\n          navigate('/pedido')\r\n          \r\n          }\r\n      }\r\n    } \r\n  catch (error) {\r\n    alert('Falha no Login' + error)\r\n  }\r\n  }\r\n        console.log(nome)\r\n      console.log(telefone)\r\n    return (\r\n        <>\r\n            <Container>   \r\n                <Wrapper>\r\n                    \r\n                    <TitleLogin>Faça seu Login</TitleLogin>\r\n\r\n            <form onSubmit={(onFinish)}>\r\n                <Input name=\"nome\" onChange={handleChangeNome} errorMessage={errors?.nome?.message}  control={control} placeholder=\"Nome:\" />    \r\n                <Input name=\"telefone\" onChange={handleChangeTelefone}  errorMessage={errors?.telefone?.message} control={control} placeholder=\"Telefone\" />   \r\n                \r\n                <Button title=\"Login\"   type=\"submit\"/>\r\n                <CriarText href=\"/criarconta\"> Criar conta</CriarText>\r\n\r\n            </form>\r\n            \r\n                    </Wrapper>   \r\n            </Container>\r\n        \r\n        \r\n        </>\r\n\r\n    )\r\n}\r\nexport {Login}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}